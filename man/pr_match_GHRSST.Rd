% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/utils_sat.R
\name{pr_match_GHRSST}
\alias{pr_match_GHRSST}
\title{#' Title
#'
#' @param df
#'
#' @return
#' @export
#'
#' @examples
pr_check_DataLocs <- function(df){
#TODO remove locations that already have data associated with them
}
Match locations to GHRSST
Optional Inputs:
res_spat - Spatial resolution. How many pixels (n x n) to download in each direction
res_temp - What temporal averaging: 1 day (1d), 6 day (6d), 1 month(1m), ,...
Monthly climatology (1mNy), Annual climatology (12mNy)
Possible products to download are:
dt_analysis, l2p_flags, quality_level, satellite_zenith_angle, sea_ice_fraction, sea_ice_fraction_dtime_from_sst,
sea_surface_temperature, sea_surface_temperature_day_night, sses_bias, sses_count,sses_standard_deviation,
sst_count, sst_dtime, sst_mean, sst_standard_deviation, wind_speed, wind_speed_dtime_from_sst}
\usage{
pr_match_GHRSST(df, pr)
}
\arguments{
\item{df}{dataframe containing latitude, longitude and Date}

\item{pr}{products from list above, single or as a list}
}
\value{
df with product output attached
}
\description{
#' Title
#'
#' @param df
#'
#' @return
#' @export
#'
#' @examples
pr_check_DataLocs <- function(df){
#TODO remove locations that already have data associated with them
}
Match locations to GHRSST
Optional Inputs:
res_spat - Spatial resolution. How many pixels (n x n) to download in each direction
res_temp - What temporal averaging: 1 day (1d), 6 day (6d), 1 month(1m), ,...
Monthly climatology (1mNy), Annual climatology (12mNy)
Possible products to download are:
dt_analysis, l2p_flags, quality_level, satellite_zenith_angle, sea_ice_fraction, sea_ice_fraction_dtime_from_sst,
sea_surface_temperature, sea_surface_temperature_day_night, sses_bias, sses_count,sses_standard_deviation,
sst_count, sst_dtime, sst_mean, sst_standard_deviation, wind_speed, wind_speed_dtime_from_sst
}
\examples{
df <- head(pr_get_DataLocs("CPR"),5)
res_spat = 10
res_temp = "6d"
pr = c("sea_surface_temperature", "sea_surface_temperature_day_night")
sstout <- pr_match_GHRSST(df, pr)
#TODO add progress bars with purrr
}
